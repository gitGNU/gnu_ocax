Before upgrading, read INSTALL to refresh your memory.

1. Make a backup and save it somewhere just in case.
2. Save your app/files folder
3. Save your protected/config/main.php file
4. Overwrite app/ and protected/ with new version
5. Check file permissions # chown -R www-data app/assets/ app/files/ app/css protected/runtime/

PLEASE README!
If, for example you are on version 1.1.0 and you are upgrading to version 1.1.3,
you cannot jump to the 1.1.3 instructions.
You must follow all upgrade instructions in ascending order. 1.1.1 then 1.1.2 then 1.1.3



OCAX 1.2
Upgrade instructions.
1. Follow steps 1-5 above.

remove the directory app/files/csv and all the content
mkdir protected/runtime/tmp
mkdir protected/runtime/html
chown -R www-data protected/runtime/
chown -R www-data app/css

/* ---------- start copying ---------- */

INSERT INTO config(parameter, value, required, description) VALUES ('siteAutoBackup', '0', '1', 'Automated site backup (experimental)');
INSERT INTO config(parameter, value, required, description) VALUES ('HTMLeditorSafe', '1', '1', "Safe HTML editor");
INSERT INTO config(parameter, value, required, description) VALUES ('HTMLeditorUseCompressor', '1', '1', "Use HTML editor compressor");
INSERT INTO config(parameter, value, required, description) VALUES ('socialActivateNonFree', '0', '1', "Include Twitter and Facebook widgets");
INSERT INTO config(parameter, value, required, description) VALUES ('vaultDefaultCapacity', '3', '1', 'Default vault capacity');

INSERT INTO config(parameter, value, required, description) VALUES ('siteColor', 'a1a150', '1', "The colour of your site eg: #a1a150");
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatus', '0', '1', 'Site configuration complete');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusBudgetDescriptionsImport', '0', '1', 'Budget descriptions have been imported');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusEmail', '0', '1', 'Site email configuration status');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusEmailTemplates', '', '1', 'Have all templates been personalized?');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusLanguage', '0', '1', 'Site language configuration status');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusInitials', '0', '1', 'Obseratory initials configuration status');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusObservatoryName', '0', '1', 'Obseratory name configuration status');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusAdministrationName', '0', '1', 'Administration name configuration status');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusZipFileUpdated', '1', '1', 'Zip file containing csv is up to date');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusUptodate', '0', '1', 'OCAx version is up to date');
INSERT INTO config(parameter, value, required, description) VALUES ('siteConfigStatusPostInstallChecked', '0', '1', 'Post installation checked');

ALTER TABLE emailtext ADD updated TINYINT(1) DEFAULT 0 NOT NULL;

UPDATE config SET description='Name of the Administration' WHERE parameter='administrationName';
UPDATE config SET description='Does your Observatory encourage membership?' WHERE parameter='membership';
UPDATE config SET description='Email server' WHERE parameter='smtpMethod';
UPDATE config SET description='SMTP Auth' WHERE parameter='smtpAuth';
UPDATE config SET description='Database backup method' WHERE parameter='databaseDumpMethod';

UPDATE config SET required=0 WHERE parameter='smtpHost';
UPDATE config SET required=0 WHERE parameter='smtpPassword';
UPDATE config SET required=0 WHERE parameter='smtpPort';
UPDATE config SET required=0 WHERE parameter='smtpSecure';
UPDATE config SET required=0 WHERE parameter='smtpUsername';

ALTER TABLE user ADD is_description_editor TINYINT(1) DEFAULT 0;

CREATE TABLE IF NOT EXISTS log (
  id int(11) NOT NULL AUTO_INCREMENT,
  user int(11) NULL,		/* NULL because some things might be system log */
  created int(11) NOT NULL,	/* unix time stamp */
  prefix varchar(255) NOT NULL,	/* possible is the name of a model */
  model_id int(11) NULL,
  message varchar(1024) NOT NULL,
  PRIMARY KEY (id)
) ENGINE=INNODB DEFAULT CHARSET = utf8;


/* ---------- stop copying ---------- */

OCAX 1.1.4
Upgrade instructions.
1. Follow steps 1-5 above.

2. Do you use spain_budget_description.sql? You need to download the updated version from
http://ocax.net/download/budgetdescriptions/spain_budget_description.sql
and import it into your database.

3. You need to make changes to the database. Copy the sql code and paste it into your sql workspace.

/* ---------- start copying ---------- */

ALTER TABLE config ADD can_edit TINYINT(1) DEFAULT 1;
UPDATE config SET parameter='administrationName' WHERE parameter='councilName';
INSERT INTO config(parameter, value, required, description) VALUES ('administrationLatitude', '', '0', "Administration's WGS84 latitude on earth");
INSERT INTO config(parameter, value, required, description) VALUES ('administrationLongitude', '', '0', "Administration's WGS84 longitude on earth");
INSERT INTO config(parameter, value, can_edit, description) VALUES ('schemaVersion', '0', '0', 'MYSQL schema version');

/* ---------- stop copying ---------- */


OCAX 1.1.3
Follow steps 1-5 above.
You need make changes to the database. Copy the sql code and paste it into your sql workspace.

/* ---------- start copying ---------- */

ALTER TABLE comment ADD model VARCHAR(50) DEFAULT NULL;
ALTER TABLE comment ADD model_id int(11) DEFAULT NULL;
ALTER TABLE comment ADD thread_position int(11) DEFAULT NULL;

DROP PROCEDURE IF EXISTS mod_comment;
DELIMITER $$
CREATE PROCEDURE mod_comment()
BEGIN
  DECLARE done INT DEFAULT FALSE;
  DECLARE c_id, c_enquiry, c_reply int(11);
  DECLARE cur1 CURSOR FOR SELECT id,enquiry,reply FROM `comment`;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
  OPEN cur1;
  read_loop: LOOP
    FETCH cur1 INTO c_id, c_enquiry, c_reply;
    IF done THEN
      LEAVE read_loop;
    END IF;
    IF c_enquiry IS NOT NULL THEN
      UPDATE `comment` SET model='enquiry', model_id=c_enquiry WHERE id=c_id;
    ELSE
      UPDATE `comment` SET model='reply', model_id=c_reply WHERE id=c_id;
    END IF;
  END LOOP;
  CLOSE cur1;
END$$
DELIMITER ;
CALL mod_comment();

ALTER TABLE `comment` DROP FOREIGN KEY `comment_ibfk_1`;
ALTER TABLE `comment` DROP FOREIGN KEY `comment_ibfk_2`;
ALTER TABLE `comment` DROP COLUMN `enquiry`;
ALTER TABLE `comment` DROP COLUMN `reply`;

CREATE TABLE IF NOT EXISTS comment_count (
  id int(11) NOT NULL AUTO_INCREMENT,
  model VARCHAR(50) DEFAULT NULL,
  model_id int(11) DEFAULT NULL,
  thread_count int(11) DEFAULT 1,
  PRIMARY KEY (id)
) ENGINE=INNODB DEFAULT CHARSET = utf8;

RENAME TABLE bulk_email TO newsletter;
ALTER TABLE newsletter ADD published DATETIME NULL;

DROP PROCEDURE IF EXISTS mod_newsletter;
DELIMITER $$
CREATE PROCEDURE mod_newsletter()
BEGIN
  DECLARE done INT DEFAULT FALSE;
  DECLARE c_id, c_sent int(11);
  DECLARE c_created, c_published DATETIME;
  DECLARE cur1 CURSOR FOR SELECT id, created, sent, published FROM `newsletter`;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
  OPEN cur1;
  read_loop: LOOP
    FETCH cur1 INTO c_id, c_created, c_sent, c_published;
    IF done THEN
      LEAVE read_loop;
    END IF;
    IF c_sent = 2 THEN
      UPDATE `newsletter` SET published=c_created WHERE id=c_id;
    END IF;
  END LOOP;
  CLOSE cur1;
END$$
DELIMITER ;
CALL mod_newsletter();

ALTER TABLE user MODIFY COLUMN activationcode varchar(45) NOT NULL;
ALTER TABLE reset_password MODIFY COLUMN code varchar(45) NOT NULL;
INSERT INTO config(parameter, value, required, description) VALUES ('smtpMethod', '0', '1', 'SMTP Method ( 0=SMTP, 1=Sendmail )');
INSERT INTO config(parameter, value, required, description) VALUES ('databaseDumpMethod', 'native', '1', 'Method for database backups: native or alternative');

/* ---------- stop copying ---------- */


OCAX 1.1.2
Follow steps 1-5 above.

This version of OCAX come with some database changes. You need to update the database.

/* ---------- start copying ---------- */

RENAME TABLE budget_description TO budget_desc_common;
ALTER TABLE budget_desc_common DROP common;
ALTER TABLE budget_desc_common MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
ALTER TABLE budget_desc_common MODIFY `csv_id` varchar(100) DEFAULT NULL;
ALTER TABLE budget_desc_common MODIFY `code` varchar(32) DEFAULT NULL;

CREATE TABLE IF NOT EXISTS budget_desc_local (
  id int(11) NOT NULL AUTO_INCREMENT,
  csv_id varchar(100) NOT NULL,
  language char(2) NOT NULL,
  code varchar(32) NULL,
  label varchar(32) NULL,
  concept varchar( 255 ) NOT NULL,
  description MEDIUMTEXT,
  text MEDIUMTEXT,	/* description without tags */
  modified DATETIME NULL,
  FULLTEXT (concept, text),
  PRIMARY KEY (id)
) ENGINE=MyISAM DEFAULT CHARSET = utf8;

ALTER TABLE enquiry ADD addressed_to TINYINT(1) DEFAULT 0 NOT NULL;
UPDATE config SET parameter='observatoryName1' WHERE parameter='observatoryName';
INSERT INTO config(parameter, value, required, description) VALUES ('observatoryName2', 'My town', '0', 'Observatory name part 2');
INSERT INTO config(parameter, required, description) VALUES ('socialTwitterUsername', '0', "Observatory's twitter username");

/* ---------- stop copying ---------- */


Have you modified budget descriptions?
If you have created or modified budget_descriptions, you need to do this.
1. Save your modifications somewhere.
> SELECT `csv_id`, `language`, `code`, `label`, `concept`, `description` FROM `budget_description` WHERE `modified` IS NOT NULL;
(Using phpmyadmin it's easy to export this to a csv format. Save it on your PC.)
2. Import budget_descriptions again.
$ wget http://ocax.net/download/budgetdescriptions/spain_budget_description.sql
$ mysql -uuser_name -p db_name < spain_budget_descriptions.sql



1.1.1
Follow steps 1-6 above.

We've got a new Global Parameter.

/* ---------- start copying ---------- */

INSERT INTO config(parameter, value, required, description) VALUES ('currencySymbol', 'n €', '1', 'Currency symbol and collocation');
ALTER TABLE budget MODIFY `csv_id` varchar(100) DEFAULT NULL;
ALTER TABLE budget MODIFY `csv_parent_id` varchar(100) DEFAULT NULL;

/* ---------- stop copying ---------- */

1.1.0
Follow steps 1-6 above.
Create a new table in the database

/* ---------- start copying ---------- */

CREATE TABLE IF NOT EXISTS archive (
  id int(11) NOT NULL AUTO_INCREMENT,
  name varchar(255) NOT NULL,
  path varchar(255) NOT NULL,
  extension varchar(5) NULL,
  author int(11) NOT NULL,
  description TEXT NOT NULL,
  created date NOT NULL,
  FOREIGN KEY (author) REFERENCES user(id),
  PRIMARY KEY (id)
) ENGINE=INNODB DEFAULT CHARSET = utf8;

/* ---------- stop copying ---------- */


1.0.4
Nothing special to do. Follow steps 1-4 above.


1.0.3
1. Save your app/files folder
2. Save protected/config/main.php
2. Overwrite app/ and protected/
3. Restore app/files and protected/config/main.php


1.0.2
Database changes
----------------
We changed two feilds in the database table intro_page from TINYINT(3) to INT(3)
You need to do this.

/* ---------- start copying ---------- */

ALTER TABLE intro_page MODIFY toppos INT(3);
ALTER TABLE intro_page MODIFY leftpos INT(3);
ALTER TABLE intro_page ADD color varchar(6) NOT NULL DEFAULT '222222' AFTER leftpos;
ALTER TABLE intro_page ADD bgcolor varchar(6) NOT NULL DEFAULT 'FFFFFF' AFTER color;
ALTER TABLE intro_page ADD opacity TINYINT(1) NOT NULL DEFAULT '8' AFTER bgcolor;
INSERT INTO config(parameter, value, required, description) VALUES ('membership', '0', '1', 'Does your Observatory encourage membership? (0 or 1)');

/* ---------- stop copying ---------- */



